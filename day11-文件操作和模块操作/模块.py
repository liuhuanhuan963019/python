import time as myTime   #可以用as取别名，取玩别名，原来的名字就可以再用了
# print(time.ctime())  #调用模块中的函数
print(myTime.ctime())  #调用模块中的函数
#import到首次导入模块的时候，会发生：
#1.打开模块文件
#2.执行模块的相应的文件，将执行过程中产生的名字都丢到模块的名称空间
#3.在程序中会有一个模块的名称指向模块的名称空间去

#模块会优先去寻找当前目录中的文件
#如果没有会到系统变量中去寻找，可以通过sys.path来查看路径
#linux默认一般为/usr/local/lib/python
#第三方一般是在lib/site-packages目录下

from time import ctime,time  #部分导入
# from time import *
print(ctime())

#from ...import 首次导入发生来三个步骤
#1 以模块为准创造来一个模块的名称空间
#2 执行模块的对应文件，将执行过程中产生的名字都丢到模块的名称空间
#3 在当前执行文件的名称空间中拿到一个名字，该名字直接指向模块中的某一个名字
#优点：  不用加前缀，名称更加简洁
#缺点：  容易与当前执行文件中名称空间中的名字冲突


'''
    相同点和不同点：
        相同：都会执行模块对应的文件 并且都会产生模块的名称空间
            两者在调用功能时，都需要转到定义时寻找作用域关系
        不同点：
            import需要加前缀  from...import  不需要加前缀
            
            
    使用from导入文件，如果函数民相同，后面的导入会覆盖之前的导入
    把模块一次性的全部导入
        语法格式:
            from  xxx import *
            示例：from time import *
'''
